---
- name: Copy physical interface hostname.if files
  ansible.builtin.template:
    src: hostname.if.j2
    dest: /etc/hostname.{{ item.key }}
    owner: root
    group: wheel
    mode: '0640'
  loop: "{{ pf_physical_ifs | dict2items }}"
  notify: Netstart

- name: Copy VLAN hostname.if files
  ansible.builtin.template:
    src: hostname.vlan.j2
    dest: /etc/hostname.vlan{{ item.value.vlan }}
    owner: root
    group: wheel
    mode: '0640'
  loop: "{{ pf_subnets | dict2items | rejectattr('value.vlan', 'false') | list }}"
  notify: Netstart

- name: Copy remote access VPN hostname.if files
  ansible.builtin.template:
    src: hostname.ra_vpn.j2
    dest: /etc/hostname.{{ item.value.if }}
    owner: root
    group: wheel
    mode: '0640'
  loop: "{{ pf_ra_vpns | dict2items }}"
  notify: Netstart

- name: Copy site-to-site VPN hostname.if files
  ansible.builtin.template:
    src: hostname.s2s_vpn.j2
    dest: /etc/hostname.{{ item.value.if }}
    owner: root
    group: wheel
    mode: '0640'
  loop: "{{ pf_s2s_vpns | dict2items }}"
  notify: Netstart

- name: Allow traffic forwarding
  ansible.posix.sysctl:
    name: net.inet.ip.forwarding
    value: '1'
    state: present

- name: Copy authpf.conf
  ansible.builtin.copy:
    src: authpf.conf
    dest: /etc/authpf/authpf.conf
    owner: root
    group: wheel
    mode: '0644'
  when: pf_tables | ansible.builtin.dict2items | selectattr('value.type', 'equalto', 'authpf') | list | length > 0

- name: Copy authpf.message
  ansible.builtin.template:
    src: authpf.message.j2
    dest: /etc/authpf/authpf.message
    owner: root
    group: wheel
    mode: '0644'
  when:
    - pf_tables | ansible.builtin.dict2items | selectattr('value.type', 'equalto', 'authpf') | list | length > 0
    - pf_authpf_message is not undefined

- name: Create authpf users
  ansible.builtin.user:
    name: "{{ item }}"
    login_class: authpf
  loop: "{{ pf_tables | ansible.builtin.dict2items | selectattr('value.type', 'equalto', 'authpf') | list | json_query('[].value.users') | flatten }}"

- name: Copy pf.conf
  ansible.builtin.template:
    src: pf.conf.j2
    dest: /etc/pf.conf
    owner: root
    group: wheel
    mode: '0600'
  notify: Reload pf.conf and flush rules

- name: Copy dhclient.conf
  ansible.builtin.template:
    src: dhclient.conf.j2
    dest: /etc/dhclient.conf
    owner: root
    group: wheel
    mode: '0640'
  notify: Reset external network interface

- name: Copy dhcpd.conf
  ansible.builtin.template:
    src: dhcpd.conf.j2
    dest: /etc/dhcpd.conf
    owner: root
    group: wheel
    mode: '0640'
  notify: Restart dhcpd
  when: pf_dhcpd_enabled

- name: Copy nsd.conf
  ansible.builtin.template:
    src: nsd.conf.j2
    dest: /var/nsd/etc/nsd.conf
    owner: root
    group: wheel
    mode: '0640'
  notify: Restart nsd
  when: pf_dns_enabled

- name: Copy forward zonefile
  ansible.builtin.template:
    src: nsd-forward-zone.j2
    dest: /var/nsd/zones/master/{{ pf_internal_dns_zone }}
    owner: _nsd
    group: _nsd
    mode: '0640'
  notify: Restart nsd
  when: pf_dns_enabled

- name: Copy reverse zonefile
  ansible.builtin.template:
    src: nsd-reverse-zone.j2
    dest: /var/nsd/zones/master/{{ pf_dns_reverse_zone }}
    owner: _nsd
    group: _nsd
    mode: '0640'
  notify: Restart nsd
  when: pf_dns_enabled

- name: Copy unbound.conf
  ansible.builtin.template:
    src: unbound.conf.j2
    dest: /var/unbound/etc/unbound.conf
    owner: root
    group: wheel
    mode: '0640'
  notify: Restart unbound
  when: pf_dns_enabled
